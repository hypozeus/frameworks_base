sdk.version=1.5
sdk.rel.id=1
sdk.date=April 2009

page.title=Installing the Android SDK
@jd:body


<p>This page describes how to install the Android SDK and set up your
development environment. If you haven't downloaded the SDK, you can
do so from the 
<a href="{@docRoot}sdk/1.5_r1/index.html">Download</a> page. Once you've downloaded
the SDK, return here.</p>

<p>If you encounter any problems during installation, see the 
<a href="#installnotes">Installation Notes</a> at the bottom of
this page.</p>

<h4 style="margin-top">Upgrading?</h4>
<p>If you have already developed applications using an earlier version
of the SDK, please read 
<a href="{@docRoot}sdk/1.5_r1/upgrading.html"><strong>Upgrading the
SDK</strong></a></b>, instead.
</p>


<h2 id="setup">Preparing for Installation</h2>

<p>Before you begin, take a moment to confirm that your development machine meets the 
<a href="{@docRoot}sdk/1.5_r1/requirements.html">System Requirements</a>.
</p>

<p>If you will be developing on Eclipse with the Android Development
Tools (ADT) Plugin &mdash; the recommended path if you are new to
Android &mdash; make sure that you have a suitable version of Eclipse
installed on your computer (3.3 or newer). If you need to install Eclipse, you can
download it from this location: </p>

<p style="margin-left:2em;"><a href=
"http://www.eclipse.org/downloads/">http://www.eclipse.org/downloads/</a
></p>

<p>A Java or RCP version of Eclipse is recommended. </p>

<h2 id="installingsdk">Installing the SDK</h2>

<p>After downloading the SDK, unpack the .zip archive to a suitable location on your machine. 
By default, the SDK files are unpacked into a directory named 
<code>android_sdk_<em>&lt;platform</em>&gt;_<em>&lt;release&gt;</em></code>. 
The directory contains a local copy of the documentation (accessible by opening
<code>documentation.html</code> in your browser) and the subdirectories 
<code>tools/</code>, <code>add-ons/</code>, <code>platforms/</code>, and others. Inside
each subdirectory of <code>platforms/</code> you'll find <code>samples/</code>, which includes
code samples that are specific to each version of the platform.</p>

<p>Make a note of the name and location of the unpacked SDK directory on your system &mdash; you 
will need to refer to the SDK directory later, when setting up the Android plugin or when 
using the SDK tools.</p>

<p>Optionally, you may want to add the location of the SDK's primary <code>tools</code> directory 
to your system PATH. The primary <code>tools/</code> directory is located at the root of the 
SDK folder. Adding <code>tools</code> to your path lets you run Android Debug Bridge (adb) and 
the other command line <a href="{@docRoot}guide/developing/tools/index.html">tools</a> without 
needing to supply the full path to the tools directory. </p>
<ul>
    <li>On Linux, edit your <code>~/.bash_profile</code> or <code>~/.bashrc</code> file. Look
    for a line that sets the PATH environment variable and add the
    full path to the <code>tools/</code> directory to it. If you don't 
    see a line setting the path, you can add one:</li>

    <ul><code>export PATH=${PATH}:<em>&lt;your_sdk_dir&gt;</em>/tools</code></ul>

    <li>On a Mac, look in your home directory for <code>.bash_profile</code> and
    proceed as for Linux. You can create the <code>.bash_profile</code> if 
    you haven't already set one up on your machine. </li>

    <li>On Windows, right-click on My Computer, and select Properties.  
  Under the Advanced tab, hit the Environment Variables button, and in the
  dialog that comes up, double-click on Path (under System Variables). Add the full path to the 
  <code>tools/</code> directory to the path. </li>
  </ul>

<p>Note that, if you update your SDK in the future, you 
should remember to update your PATH settings to point to the new location, if different.</p>

<p>If you will be using the Eclipse IDE as your development environment,
the next section describes how to install the Android Development Tools plugin and set up Eclipse. 
If you choose not to use Eclipse, you can 
develop Android applications in an IDE of your choice and then compile, debug and deploy using
the tools included in the SDK (skip to <a href="#next">Next Steps</a>).</p>


<h2 id="installingplugin">Installing the ADT Plugin for Eclipse</h2>

<p>Android offers a custom plugin for the Eclipse IDE, called Android
Development Tools (ADT), that is designed to give you a powerful,
integrated environment in which to build Android applications. It
extends the capabilites of Eclipse to let you quickly set up new Android
projects, create an application UI, add components based on the Android
Framework API, debug your applications using the Android SDK tools, and even export
signed (or unsigned) APKs in order to distribute your application.</p>

<p>In general, using Eclipse with ADT is a highly recommended
approach to Android development and is the fastest way to get started.
(If you prefer to work in an IDE other than Eclipse,
you do not need to install Eclipse or ADT, instead, you can directly
use the SDK tools to build and debug your application.)</p>

<p>Once you have Eclipse installed, as described in <a href="#setup">Preparing for 
Installation</a>, follow the steps below to
download the ADT plugin and install it in your respective Eclipse
environment. </p>

<table style="font-size:100%">
<tr><th>Eclipse 3.3 (Europa)</th><th>Eclipse 3.4 (Ganymede)</th></tr>
<tr>
<td width="45%">
<!-- 3.3 steps -->
<ol>
    <li>Start Eclipse, then select <strong>Help</strong> &gt; <strong>Software Updates</strong> 
&gt; <strong>Find and Install...</strong>. </li>
    <li>In the dialog that appears, select <strong>Search for new features to install</strong> 
and click <strong>Next</strong>. </li>
    <li>Click <strong>New Remote Site</strong>. </li>
    <li>In the resulting dialog box, enter a name for the remote site (e.g. "Android Plugin") and 
    enter the URL:
        <pre>https://dl-ssl.google.com/android/eclipse/</pre>
        <p>If you have trouble aqcuiring the plugin, try using "http" in the URL,
        instead of "https" (https is preferred for security reasons).</p>
        <p>Click <strong>OK</strong>.</p> </li>
    <li>You should now see the new site added to the search list (and checked).
        Click <strong>Finish</strong>. </li>
    <li>In the subsequent Search Results dialog box, select the checkbox for the
    "Android Plugin".
    This will select the nested tools: "Android DDMS" and "Android Development Tools". 
    Click <strong>Next</strong>.</li>
    <li>Read and accept the license agreement, then click <strong>Next</strong>. </li>
    <li>On the following Installation window, click <strong>Finish</strong>. </li>
    <li>The ADT plugin is not digitally signed. Accept the installation anyway
        by clicking <strong>Install All</strong>. </li>
    <li>Restart Eclipse. </li>
</ol>

</td>
<td>

<!-- 3.4 steps -->
<ol>
    <li>Start Eclipse, then select <strong>Help</strong> &gt; <strong>Software Updates...</strong>.</li>
    <li>In the dialog that appears, click the <strong>Available Software</strong> tab. </li>
    <li>Click <strong>Add Site...</strong> </li>
    <li>Enter the Location:
      <pre>https://dl-ssl.google.com/android/eclipse/</pre>
        <p>If you have trouble aqcuiring the plugin, try using "http" in the Location URL,
        instead of "https" (https is preferred for security reasons).</p>   
      <p>Click <strong>OK</strong>.</p></li>
    <li>Back in the Available Software view, you should see the plugin listed by the URL,
    with "Developer Tools" nested within it. Select the checkbox next to 
      Developer Tools and click <strong>Install...</strong></li>
    <li>On the subsequent Install window, "Android DDMS" and "Android Development Tools"
    should both be checked. Click <strong>Next</strong>. </li>
    <li>Read and accept the license agreement, then click <strong>Finish</strong>.</li>
    <li>Restart Eclipse. </li>
</ol>

</td>
</tr>
</table>

<p>Now modify your Eclipse preferences to point to the Android SDK directory:</p>
<ol>
    <li>Select <strong>Window</strong> &gt; <strong>Preferences...</strong> to open the Preferences
        panel (Mac: <strong>Eclipse</strong> &gt; <strong>Preferences</strong>).</li>
    <li>Select <strong>Android</strong> from the left panel. </li>
    <li>For the <em>SDK Location</em> in the main panel, click <strong>Browse...</strong> and 
locate your downloaded SDK directory. </li>
    <li>Click <strong>Apply</strong>, then <strong>OK</strong>.</li>
</ol>

<p>Done! If you haven't encountered any problems, then you're ready to
begin developing Android applications. See the 
<a href="#next">Next Steps</a> section for suggestions on how to start. </p>


<h3 id="troubleshooting">Troubleshooting ADT Installation</h3>
<p> 
If you are having trouble downloading the ADT plugin after following the steps above, here are 
some suggestions: </p>

<ul>
  <li>If Eclipse can not find the remote update site containing the ADT plugin, try changing 
  the remote site URL to use http, rather than https. That is, set the Location for the remote site to:
  <pre>http://dl-ssl.google.com/android/eclipse/</pre></li>
  <li>If you are behind a firewall (such as a corporate firewall), make
  sure that you have properly configured your proxy settings in Eclipse.
  In Eclipse 3.3/3.4, you can configure proxy information from the main
  Eclipse menu in <strong>Window</strong> (on Mac, <strong>Eclipse</strong>) &gt; 
  <strong>Preferences</strong> &gt; <strong>General</strong> &gt; 
  <strong>Network Connections</strong>.</li>
</ul>
<p> 
If you are still unable to use Eclipse to download the ADT plugin as a remote update site, you 
can download the ADT zip file to your local machine and manually install the it:
</p>
<ol>
  <li><a href="{@docRoot}sdk/adt_download.html">Download the ADT zip file</a> (do not unpack it).</li>
  <li>Follow steps 1 and 2 in the default install instructions (above).</li>
  <li>In Eclipse 3.3, click <strong>New Archive Site...</strong>. <br/>
      In Eclipse 3.4, click <strong>Add Site...</strong>, then <strong>Archive...</strong></li>
  <li>Browse and select the downloaded zip file.</li>
  <li>Follow the remaining procedures, above, starting from steps 5.</li>
</ol>
<p>To update your plugin once you've installed using the zip file, you will have to 
follow these steps again instead of the default update instructions.</p>

<h4>Other install errors</h4>

<p>Note that there are features of ADT that require some optional 
Eclipse components (for example, WST). If you encounter an error when 
installing ADT, your Eclipse installion might not include these components. 
For information about how to quickly add the necessary components to your 
Eclipse installation, see the troubleshooting topic 
<a href="{@docRoot}guide/appendix/faq/troubleshooting.html#installeclipsecomponents">ADT 
Installation Error: "requires plug-in org.eclipse.wst.sse.ui"</a>.</p>

<h4>For Linux users</h4>
<p>If you encounter this error when installing the ADT Plugin for Eclipse: 
<pre>
An error occurred during provisioning.
Cannot connect to keystore.
JKS</pre>
<p>
...then your development machine lacks a suitable Java VM. Installing Sun
Java 6 will resolve this issue and you can then reinstall the ADT
Plugin.</p>


<h2 id="next">Next Steps</h2>
<p>Once you have completed installation, you are ready to
begin developing applications. Here are a few ways you can get started: </p>

<p><strong>Learn about Android</strong></p>
<ul>
  <li>Take a look at the <a href="{@docRoot}guide/index.html">Dev
  Guide</a> and the types of information it provides</li>
  <li>Read an introduction to Android as a platform in <a
  href="{@docRoot}guide/basics/what-is-android.html">What is
  Android?</a></li>
  <li>Learn about the Android framework and how applications run on it in
  <a href="{@docRoot}guide/topics/fundamentals.html">Application
  Fundamentals</a></li>
  <li>Take a look at the Android framework API specification in the <a
  href="{@docRoot}reference/packages.html">Reference</a> tab</li>
</ul>

<p><strong>Explore the SDK</strong></p>
<ul>
  <li>Get an overview of the <a
  href="{@docRoot}guide/developing/tools/index.html">development
  tools</a> that are available to you</li>
  <li>Read how to develop <a
  href="{@docRoot}guide/developing/eclipse-adt.html">in Eclipse/ADT</a> or
  <a href="{@docRoot}guide/developing/other-ide.html">in other IDEs</a>
  </li>
</ul>

<p><strong>Explore some code</strong></p>
<ul>
  <li>Set up a <a href="{@docRoot}guide/tutorials/hello-world.html">Hello
  World application</a> (highly recommended, especially for Eclipse users)</li>
  <li>Follow the <a href="{@docRoot}guide/tutorials/notepad/index.html">
  Notepad Tutorial</a> to build a full Android application </li>
  <li>Create a new project for one of the other sample applications
  included in <code><em>&lt;sdk&gt;</em>/platforms/<em>&lt;platfrom&gt;</em>/samples</code>, 
  then compile and run it in your development environment</li>
</ul>

<p><strong>Visit the Android developer groups</strong></p>
<ul>
  <li>Take a look at the <a
  href="{@docRoot}community/index.html">Community</a> tab to see a list of
  Android developers groups. In particular, you might want to look at the
  <a href="http://groups.google.com/group/android-developers">Android
  Developers</a> group to get a sense for what the Android developer
  community is like.</li>
</ul>


<h2 id="installnotes">Installation Notes</h2>

<h3>Ubuntu Linux Notes</h3>

<ul>
  <li>If you need help installing and configuring Java on your
    development machine, you might find these resources helpful: 
    <ul>
      <li><a href="https://help.ubuntu.com/community/Java">https://help.ubuntu.com/community/Java </a></li>
      <li><a href="https://help.ubuntu.com/community/Java">https://help.ubuntu.com/community/JavaInstallation</a></li>
    </ul>
  </li>
  <li>Here are the steps to install Java and Eclipse, prior to installing
  the Android SDK and ADT Plugin.
    <ol>
      <li>If you are running a 64-bit distribution on your development
      machine, you need to install the <code>ia32-libs</code> package using
      <code>apt-get:</code>:
      <pre>apt-get install ia32-libs</pre>
      </li>
      <li>Next, install Java: <pre>apt-get install sun-java6-bin</pre></li>
      <li>The Ubuntu package manager does not currently offer an Eclipse 3.3
      version for download, so we recommend that you download Eclipse from
      eclipse.org (<a
      href="http://www.eclipse.org/downloads/">http://www.eclipse.org/
      downloads/</a>). A Java or RCP version of Eclipse is recommended.</li>
      <li>Follow the steps given in previous sections to install the SDK 
      and the ADT plugin. </li>
    </ol>
  </li>
</ul>

<h3>Other Linux Notes</h3>

<ul>
  <li>If JDK is already installed on your development computer, please
  take a moment to make sure that it meets the version requirements listed
  in the <a href="{@docRoot}sdk/1.1_r1/requirements.html">System Requirements</a>.
  In particular, note that some Linux distributions may include JDK 1.4 or Gnu
  Compiler for Java, both of which are not supported for Android development.</li>
</ul>



